---
name: github-packer-deploy
run-name: "${{ github.actor }} has triggered the ${{ github.workflow }} workflow"
on:
  pull_request:
    types:
      - synchronize
      - opened
      - reopened
      - edited
  workflow_call:
    inputs:
      packer_version:
        description: 'Terraform version to use'
        required: false
        default: 'latest'
        type: string
      packer_directory:
        description: 'Terraform files directory to lint'
        required: false
        default: '.'
        type: string
      packer_action:
        description: 'Terraform action to perform'
        required: false
        default: 'plan'
        type: string
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}  # This is the concurrency group name and should be unique per pull request
  cancel-in-progress: ${{ !contains(github.ref, 'release/')}}  # Cancel previous runs if a new run is triggered on a non-release branch
env:
  PACKER_VERSION: ${{ github.event.inputs.packer_version || 'latest' }}
  PACKER_DIRECTORY: ${{ github.event.inputs.packer_directory || '.' }}
  PACKER_ACTION: ${{ github.event.inputs.packer_action || 'plan' }}
jobs:
  github-packer-deploy:
    permissions:
      contents: read
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4
        with:
          fetch-depth: 1
      - name: Set up Terraform
        id: setup
        uses: hashicorp/setup-packer@b9cd54a3c349d3f38e8881555d616ced269862dd  # v3
        with:
          packer_version: "${{ env.PACKER_VERSION }}"
      - name: Terraform Init
        id: init
        run: |-
          cd "${{ env.PACKER_DIRECTORY }}"
          packer init -upgrade -no-color
      - name: Terraform Validate
        id: validate
        if: steps.init.outcome == 'success'
        run: |-
          cd "${{ env.PACKER_DIRECTORY }}"
          packer validate -no-color -json
      - name: Terraform Fmt
        id: fmt
        if: steps.validate.outcome == 'success'
        run: |-
          packer fmt -diff -write=true -check=true -recursive "${{ env.PACKER_DIRECTORY }}"
        continue-on-error: true
      - name: Terraform ${{ env.PACKER_ACTION }} action
        id: action
        if: steps.fmt.outcome == 'success'
        run: |-
          cd "${{ env.PACKER_DIRECTORY }}"
          packer ${{ env.PACKER_ACTION }} -auto-approve -no-color
